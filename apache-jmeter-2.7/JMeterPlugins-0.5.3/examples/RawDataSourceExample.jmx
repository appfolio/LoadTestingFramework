<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments">This example demonstrates usage of Raw Data Source PreProcessor
Variable &apos;fileID&apos; used to separate files in different test runs
Thread Groups will run consecutively to generate file, then use it.

Run the test and see generated samples in View Results Tree</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="fileID" elementType="Argument">
            <stringProp name="Argument.name">fileID</stringProp>
            <stringProp name="Argument.value">${__time}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group - Generate Example Data File" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1302858212000</longProp>
        <longProp name="ThreadGroup.end_time">1302858212000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">This thread group generates sample raw file of 10 records
In real life users will create raw files outside of JMeter</stringProp>
      </ThreadGroup>
      <hashTree>
        <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="jp@gc - Dummy Sampler" enabled="true">
          <boolProp name="SUCCESFULL">true</boolProp>
          <stringProp name="RESPONSE_CODE">200</stringProp>
          <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
          <stringProp name="RESPONSE_DATA">GET /page/${__Random(1,100000)}
Host: localhost
Connection: close
</stringProp>
          <stringProp name="RESPONSE_TIME">1</stringProp>
          <stringProp name="TestPlan.comments">This sampler will provide SampleResults for Flexible File Writer
For results to vary we use random number</stringProp>
        </kg.apc.jmeter.samplers.DummySampler>
        <hashTree>
          <kg.apc.jmeter.reporters.FlexibleFileWriter guiclass="kg.apc.jmeter.reporters.FlexibleFileWriterGui" testclass="kg.apc.jmeter.reporters.FlexibleFileWriter" testname="jp@gc - Flexible File Writer" enabled="true">
            <stringProp name="filename">rawSource_${fileID}.txt</stringProp>
            <stringProp name="columns">receivedBytes|\r\n|responseData|\r\n</stringProp>
            <stringProp name="TestPlan.comments">This plugin writes samples into file in specified format
Variable &apos;fileID&apos; used to separate files in different test runs
In real life users should generate such files with scripts etc.</stringProp>
          </kg.apc.jmeter.reporters.FlexibleFileWriter>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group - Use Raw Data File" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1302858378000</longProp>
        <longProp name="ThreadGroup.end_time">1302858378000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">This thread group runs after previous 
It will make more requests then generated file contains,
demonstrating file rewind.</stringProp>
      </ThreadGroup>
      <hashTree>
        <kg.apc.jmeter.modifiers.RawRequestSourcePreProcessor guiclass="kg.apc.jmeter.modifiers.RawRequestSourcePreProcessorGui" testclass="kg.apc.jmeter.modifiers.RawRequestSourcePreProcessor" testname="jp@gc - Raw Data Source PreProcessor" enabled="true">
          <boolProp name="rewind">true</boolProp>
          <stringProp name="variable_name">rawData</stringProp>
          <stringProp name="filename">rawSource_${fileID}.txt</stringProp>
          <stringProp name="TestPlan.comments">This preprocessor reads file created in previous thread group
It reads next chunk of data for each sampler in its scope 
and puts data into rawData variable</stringProp>
        </kg.apc.jmeter.modifiers.RawRequestSourcePreProcessor>
        <hashTree/>
        <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="jp@gc - Dummy Sampler" enabled="true">
          <boolProp name="SUCCESFULL">true</boolProp>
          <stringProp name="RESPONSE_CODE">200</stringProp>
          <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
          <stringProp name="RESPONSE_DATA">${rawData}</stringProp>
          <stringProp name="RESPONSE_TIME">${__Random(1,1000)}</stringProp>
          <stringProp name="TestPlan.comments">This sampler just use variable from PreProcessor 
to visualize data in samples</stringProp>
        </kg.apc.jmeter.samplers.DummySampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="TestPlan.comments">Run the test and see that second thread group
reads file created in first thread group,
choose Response Data tab.</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
